---
- name: set up node join command to kubernetes cluster
  hosts: controlplane
  connection: local
  become: true
  gather_facts: false

  tasks:
    - name: create join command
      shell: kubeadm token create --print-join-command
      register: join_command

    - name: set join command variable
      set_fact:
        join_command: "{{ join_command.stdout_lines[0] }}"

- name: node set up start 
  hosts: node
  become: true
  
  tasks:
    - name: disable swap
      shell: |
            swapoff -a
            sed -i '/ swap / s/^/#/' /etc/fstab
      when: ansible_swaptotal_mb > 0

    - name: add module load config
      blockinfile:
        path: /etc/modules-load.d/k8s.conf
        block: |
              overlay
              br_netfilter
        create: true

    - name: load the modules
      modprobe:
        name: "{{ item }}"
        state: present
      loop:
        - overlay
        - br_netfilter

    - name: add sysctl parameters and apply
      sysctl:
        sysctl_file: /etc/sysctl.d/k8s.conf
        name: "{{ item }}"
        value: '1'
        reload: yes
      loop:
        - net.bridge.bridge-nf-call-iptables
        - net.bridge.bridge-nf-call-ip6tables
        - net.ipv4.ip_forward

    - name: set up the repository for install docker
      apt:
        force_apt_get: yes
        update_cache: yes
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release

    - name: create GPG key directory
      file:
        path: /etc/apt/keyrings
        state: directory

    - name: add docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        keyring: /etc/apt/keyrings/docker.gpg
    
    - name: get deb architecture
      shell: dpkg --print-architecture
      register: deb_architecture

    - name: add the docker apt repository
      apt_repository:
        repo: deb [arch={{ deb_architecture.stdout }} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable

    - name: install docker and containerd
      apt:
        force_apt_get: yes
        update_cache: yes
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
    
    - name: containerd cgroup driver config
      shell: |
            containerd config default | tee /etc/containerd/config.toml
            sed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /etc/containerd/config.toml
      notify: restart containerd

    - name: force all notified handlers to run at this point, not waiting for normal sync points
      meta: flush_handlers

    - name: set up the repository for install kubernetes
      apt:
        force_apt_get: yes
        update_cache: yes
        name: apt-transport-https

    - name: add google GPG key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        keyring: /usr/share/keyrings/kubernetes-archive-keyring.gpg
    
    - name: add the kubernetes apt repository
      apt_repository:
        repo: deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main

    - name: install kubeadm, kubelet, kubectl
      apt:
        force_apt_get: yes
        update_cache: yes
        name:
          - kubeadm
          - kubelet 
          - kubectl
    
    - name: kubeadm, kubelet, kubectl apt-mark hold
      shell: apt-mark hold kubeadm kubelet kubectl

    - name: change kubernetes cluster internal-ip
      lineinfile:
        path: /etc/default/kubelet
        line: KUBELET_EXTRA_ARGS=--node-ip={{ ansible_eth1.ipv4.address }}
        create: true
      notify: restart kubelet

    - name: node join cluster
      shell: "{{ hostvars['controlplane'].join_command }} >> ~/kubernetes_cluster_join.txt"
      args:
        creates: ~/kubernetes_cluster_join.txt

  handlers:
    - name: restart containerd
      service:
        name: containerd
        state: restarted

    - name: restart kubelet
      service:
        name: kubelet
        state: restarted
